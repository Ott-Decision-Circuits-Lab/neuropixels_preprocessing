function processTrialEventsDual2AFC(Directory)
%assumes trial start timestamp has already been adjusted into recording
%frame. 
%input: Loads "TrialEvents.mat" generated by MakeTrialEventsNeuropixels.m


% Create additional fields in the Trial Event structure
disp('Creating additional fields in the Trial Event structure')

TE = load(fullfile(Directory,'TrialEvents.mat')); %.TE;

%we keep a copy of the old file
TEbis = TE;


WT_low_threshold=0; % Lower cut off for waiting time turning all to NaN

%nTrial
nTrials = TEbis.nTrials-1;
TEbis.nTrials=nTrials;
TEbis.TrialNumber = 1:nTrials;

if isfield(TEbis, 'before_switch')
    TE.before_switch = TEbis.before_switch;
    fprintf('got switch data')
end

if isfield(TEbis.Custom, 'BlockNumber')
    TEbis.BlockNumber = TE.Custom.BlockNumber(1:nTrials);
end
if isfield(TEbis.Custom, 'RewardMagnitude')
    TEbis.RelativeReward = TE.Custom.RewardMagnitude(:, 1) - TE.Custom.RewardMagnitude(:, 2);
    TEbis.RelativeReward = TEbis.RelativeReward(1:nTrials);
end

TEbis.ChosenDirection = 3*ones(1,nTrials);
TEbis.ChosenDirection(TE.Custom.ChoiceLeft(1:nTrials)==1)=1; %1=left; 2=right
TEbis.ChosenDirection(TE.Custom.ChoiceLeft(1:nTrials)==0)=2;
% Correct and error trials
TEbis.CorrectChoice=TE.Custom.ChoiceCorrect(1:nTrials);
TEbis.PunishedTrial=TE.Custom.ChoiceCorrect(1:nTrials)==0;

%discrimination measures
if isfield(TE.Custom, 'AuditoryOmega')
    TEbis.OmegaDiscri=2*abs(TE.Custom.AuditoryOmega(1:nTrials)-0.5);
    TEbis.NRightClicks = cellfun(@length,TE.Custom.RightClickTrain(1:nTrials));
    TEbis.NLeftClicks = cellfun(@length,TE.Custom.LeftClickTrain(1:nTrials));
    TEbis.RatioDiscri=log10(TEbis.NRightClicks./TEbis.NLeftClicks);
    TEbis.BetaDiscri=(TEbis.NRightClicks-TEbis.NLeftClicks)./(TEbis.NRightClicks+TEbis.NLeftClicks);
    TEbis.AbsBetaDiscri=abs(TEbis.BetaDiscri);
    TEbis.AbsRatioDiscri=abs(TEbis.RatioDiscri);
    
    TEbis.MostClickSide(TEbis.NRightClicks>TEbis.NLeftClicks) = 2;
    TEbis.MostClickSide(TEbis.NRightClicks<TEbis.NLeftClicks) = 1;
    TEbis.MostClickSide(TEbis.NRightClicks==TEbis.NLeftClicks) = 3;
    TEbis.ChoiceGivenClick=TEbis.MostClickSide==TEbis.ChosenDirection;
 else
    TEbis.ChoiceGivenClick=TEbis.CorrectChoice(1:nTrials);
 end
 
TEbis.DV = TE.Custom.DV(1:nTrials);
%chosen direction

%most click side


% Trial where rat gave a response
TEbis.CompletedTrial= ~isnan(TE.Custom.ChoiceLeft(1:nTrials)) & TEbis.TrialNumber>30;
% Rewarded Trials
TEbis.Rewarded=TE.Custom.Rewarded(1:nTrials)==1;
% Trials where rat sampled but did not respond
TEbis.UnansweredTrials=(TEbis.CompletedTrial(1:nTrials)==0 & TE.Custom.EarlyWithdrawal(1:nTrials)==1);
%CatchTrial
TEbis.CatchTrial = TE.Custom.CatchTrial(1:nTrials);
% Correct catch trials
%TEbis.CompletedCatchTrial=TEbis.CompletedTrial(1:nTrials)==1 & TE.Custom.CatchTrial(1:nTrials)==1 ;
% Correct trials, but rat was waiting too short
TEbis.CorrectShortWTTrial=TE.Custom.ChoiceCorrect(1:nTrials)==1 & TE.Custom.FeedbackTime(1:nTrials)<0.5;
% These are all the waiting time trials (correct catch and incorrect trials)
%TEbis.CompletedWTTrial= (TEbis.CompletedCatchTrial(1:nTrials)==1 | TEbis.PunishedTrial(1:nTrials)==1) & TEbis.CompletedTrial(1:nTrials);

% Trials were rat answered but did not receive reward
WTTrial=TEbis.CompletedTrial(1:nTrials)==1 & (TEbis.PunishedTrial(1:nTrials)==1 | TE.Custom.CatchTrial(1:nTrials)==1);

TEbis.WaitingTimeTrial=WTTrial;

% Defining ResponseOnset, ResponseStart and ResponseEnd
TEbis.ResponseStart=zeros(1,TEbis.nTrials);
TEbis.ResponseEnd=zeros(1,TEbis.nTrials);
TEbis.PokeCenterStart=zeros(1,TEbis.nTrials);
TEbis.StimulusOnset=zeros(1,TEbis.nTrials);
TEbis.LaserTrialTrainLength=zeros(1,TEbis.nTrials);

for nt=1:TEbis.nTrials
    TEbis.StimulusOnset(nt)=TE.RawEvents.Trial{nt}.States.stimulus_delivery_min(1);
    TEbis.PokeCenterStart(nt)=TE.RawEvents.Trial{nt}.States.stay_Cin(1);
    
    if ~isnan(TE.RawEvents.Trial{nt}.States.start_Rin(1))
        TEbis.ResponseStart(nt)=TE.RawEvents.Trial{nt}.States.start_Rin(1);
        TEbis.ResponseEnd(nt)= TE.Custom.ResolutionTime(nt);
        %TE.RawEvents.Trial{nt}.States.start_Rin(1) + TE.Custom.FeedbackTime(nt);
    elseif ~isnan(TE.RawEvents.Trial{nt}.States.start_Lin(1))
        TEbis.ResponseStart(nt)=TE.RawEvents.Trial{nt}.States.start_Lin(1);
        TEbis.ResponseEnd(nt)= TE.Custom.ResolutionTime(nt);    
        %TE.RawEvents.Trial{nt}.States.start_Lin(1) +
        %TE.Custom.FeedbackTime(nt);
    else
        TEbis.ResponseStart(nt)=NaN;
        TEbis.ResponseEnd(nt)=NaN;
    end
    if isfield(TE.TrialSettings(nt).GUI,'LaserTrials')
    if TE.TrialSettings(nt).GUI.LaserTrials>0
        if isfield(TE.TrialSettings(nt).GUI,'LaserTrainDuration_ms')
            TEbis.LaserTrialTrainLength(nt) = TE.TrialSettings(nt).GUI.LaserTrainDuration_ms;
        else %old version
            TEbis.LaserTrialTrainLength(nt)=NaN ;
        end
    end
    else %not even Laser Trials settings, very old version
        TEbis.LaserTrialTrainLength(nt)=NaN;
    end
end
% This is to indicate whether choice matches actual click train (important for difficult trials)

%modality
TEbis.Modality = 2*ones(1,nTrials);
if isfield(TEbis.Custom, 'RewardMagnitude')
    TEbis.RewardMagnitude = TEbis.Custom.RewardMagnitude(1:TEbis.nTrials, :);

% Conditioning the trials
    for nt=1:nTrials

        rewMagTrial = TEbis.RewardMagnitude(nt, :);

        %chosen direction
        cd = TEbis.ChosenDirection(nt);

        if cd == 3
            rewMagTrial = NaN;
        else
            rewMagTrial = rewMagTrial(cd);
        end

        TEbis.RewardMagnitudeCorrect(nt) = rewMagTrial;
        TEbis.RewardMagnitudeCorrect(nt) = rewMagTrial;
    end
end


% Waiting Time
TEbis.WaitingTime= TEbis.ResponseEnd - TEbis.ResponseStart; %TE.Custom.FeedbackTime;

% Threshold for waiting time
TEbis.WaitingTime(TEbis.WaitingTime<WT_low_threshold)=NaN;

%waiting time split
TEbis.WaitingTimeSplit=NaN(size(TEbis.ChosenDirection));

Long=TEbis.CompletedTrial==1 & TEbis.Rewarded==0 & TEbis.WaitingTime>=6.5;
MidLong=TEbis.CompletedTrial==1 & TEbis.Rewarded==0 & TEbis.WaitingTime<6.5 & TEbis.WaitingTime>=5.5 ;
MidShort=TEbis.CompletedTrial==1 & TEbis.Rewarded==0 & TEbis.WaitingTime<5.5 & TEbis.WaitingTime>=4;
Short=TEbis.CompletedTrial==1 & TEbis.Rewarded==0 & TEbis.WaitingTime<4 & TEbis.WaitingTime>=2.5;




TEbis.WaitingTimeSplit(Short)=1;
TEbis.WaitingTimeSplit(MidShort)=2;
TEbis.WaitingTimeSplit(MidLong)=3;
TEbis.WaitingTimeSplit(Long)=4;


TEbis.SamplingDuration = TE.Custom.ST(1:nTrials);
TEbis.StimulusOffset=TEbis.StimulusOnset+TEbis.SamplingDuration;

TEbis.ChosenDirectionBis=TEbis.ChosenDirection;
TEbis.ChosenDirectionBis(TEbis.ChosenDirectionBis==3)=NaN;

%correct length of TrialStartAligned
if isfield(TEbis, 'TrialStartAligned')
    TEbis.TrialStartAligned = TEbis.TrialStartAligned(1:TEbis.nTrials);
end

TEbis.TrialStartTimestamp = TEbis.TrialStartTimestamp(1:TEbis.nTrials);
% TEbis.TrialSettings = TEbis.TrialSettings(1:TEbis.nTrials); this is
% removed later anyway

%laser trials
if isfield(TE.Custom,'LaserTrial') && sum(TE.Custom.LaserTrial)>0
    if isfield (TE.Custom,'LaserTrialTrainStart')
        TEbis.LaserTrialTrainStart = TE.Custom.LaserTrialTrainStart(1:TEbis.nTrials);
        TEbis.LaserTrialTrainStartAbs = TEbis.LaserTrialTrainStart+TEbis.ResponseStart;
        TEbis.LaserTrial =double( TE.Custom.LaserTrial(1:TEbis.nTrials));
        TEbis.LaserTrial (TEbis.CompletedTrial==0)=0;
        TEbis.LaserTrial (TEbis.LaserTrialTrainStartAbs>TEbis.ResponseEnd)=0;
        TEbis.LaserTrialTrainStartAbs(TEbis.LaserTrial~=1)=NaN;
        TEbis.LaserTrialTrainStart (TEbis.LaserTrial~=1)=NaN;

        TEbis.CompletedWTLaserTrial = TEbis.LaserTrial;
        TEbis.CompletedWTLaserTrial(TEbis.CompletedWTTrial~=1)=NaN;
    else %old version, laser during entire time investment
        TEbis.LaserTrialTrainStart=zeros(1,TEbis.nTrials);
        TEbis.LaserTrialTrainStartAbs=TEbis.ResponseStart;
        TEbis.LaserTrial =double( TE.Custom.LaserTrial(1:TEbis.nTrials));
        TEbis.LaserTrial (TEbis.CompletedTrial==0)=0;
        TEbis.LaserTrialTrainStartAbs(TEbis.LaserTrial~=1)=NaN;
        TEbis.LaserTrialTrainStart (TEbis.LaserTrial~=1)=NaN;
    end

else
    TEbis.LaserTrialTrainStart = nan(1,TEbis.nTrials);
    TEbis.LaserTrialTrainStartAbs = nan(1,TEbis.nTrials);
    TEbis.LaserTrial = zeros(1,TEbis.nTrials);
    TEbis.CompletedWTLaserTrial = nan(1,TEbis.nTrials);
%    TEbis.CompletedWTLaserTrial(TEbis.CompletedWTTrial==1) = 0;
end


% ------Create simpler copy of Trial Events to turn into dataframe------%
TE_save = rmfield(TEbis, 'Custom');
TE_save = rmfield(TE_save, 'RawEvents');

if isfield(TE_save, 'RawData')
    TE_save = rmfield(TE_save, 'RawData');
end

if isfield(TE_save, 'RewardMagnitude')
    TE_save = rmfield(TE_save, 'RewardMagnitude');
end

TE_save = rmfield(TE_save, 'nTrials');
TE_save = rmfield(TE_save, 'TrialSettings');
TE_save = rmfield(TE_save, 'Settings');
TE_save.RelativeReward = TE_save.RelativeReward'; % nTrialsx1 -> 1xnTrials

try
    TE_save = rmfield(TE_save, 'CompletedChosenDirection');
    TE_save = rmfield(TE_save, 'CompletedCatchTrial');

    TE_save = rmfield(TE_save, 'ModReward');
    TE_save = rmfield(TE_save, 'SideReward');
    TE_save = rmfield(TE_save, 'ChosenDirectionBis');
    TE_save = rmfield(TE_save, 'CorrectShortWTTrial');

    TE_save = rmfield(TE_save, 'CompletedWTLaserTrial');
    TE_save = rmfield(TE_save, 'CompletedWTTrial');
    TE_save = rmfield(TE_save, 'PunishedTrial');
catch
    fprintf("no fields removed")
end

save(fullfile(Directory,  'RecBehav.mat'),'-struct','TE_save')

disp('Additional events created and Trial Event saved')